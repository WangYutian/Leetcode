class Solution {
public:
    int maxProfit(vector<int> &prices) {
        if (prices.size() < 2)return 0;
        
        int res = 0;
        int n = prices.size();
        int l[n], r[n];
        memset(l, 0, sizeof(l)); //sizeof(n)的参数是l的大小！！
        memset(r, 0, sizeof(l));
        
        int minPrice = prices[0];
        for (int i = 1; i < n; i++) {
            l[i] = max(l[i-1], prices[i] - minPrice);
            minPrice = min(minPrice, prices[i]);
        }
        int maxPrice = prices[n-1];
        for (int i = n-2; i >= 0; i--) {
            r[i] = max(r[i+1], maxPrice - prices[i]);
            maxPrice = max(maxPrice, prices[i]);
        }
        for (int i = 0; i < n; i++) {
            res = max(res, l[i]+r[i]);
        }
        return res;
    }
};
